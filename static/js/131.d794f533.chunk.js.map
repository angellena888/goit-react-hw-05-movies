{"version":3,"file":"static/js/131.d794f533.chunk.js","mappings":"oOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCC,GAArC,uFACwBH,EAAAA,EAAAA,IAAA,6BAAgCG,EAAhC,oBAAiDF,IADzE,cACQG,EADR,yBAESA,EAAQC,MAFjB,kEAKA,MAPA,SAEeH,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,mCCuCf,EAtCmB,WAAO,IAAD,EACvB,GAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRd,EAAqBU,GAAaK,MAAK,SAAAC,GACrCV,EAAUU,EAAEC,QACb,GACF,GAAE,CAACP,IAUJ,OACE,iCACE,kBAAOQ,KAAK,OAAOC,SAVF,SAAAC,GACnB,GAAuB,KAAnBA,EAAEC,OAAOC,MACX,OAAOb,EAAgB,CAAC,GAG1BA,EAAgB,CAAER,MAAOmB,EAAEC,OAAOC,OACnC,EAI8CA,MAAOZ,KAClD,yBACGL,EAAOkB,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAKE,IAAMC,MAAO,CAAEC,KAAMhB,GAAvC,SACGY,EAAKK,SAFDL,EAAKE,GAMjB,QAIR,C","sources":["services/fetchSearchByKeyword.js","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8c36e317d9a7f81a4ff072fff53940cf';\n\nasync function FetchSearchByKeyword (query) {\n  const request = await axios.get(`search/movie?query=${query}&api_key=${API_KEY}`);\n  return request.data;\n}\n\nexport default FetchSearchByKeyword;","import FetchSearchByKeyword from 'services/fetchSearchByKeyword';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { Link } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    FetchSearchByKeyword(searchQuery).then(r => {\n      setMovies(r.results);\n    });\n  }, [searchQuery]);\n\n  const handleChange = e => {\n    if (e.target.value === '') {\n      return setSearchParams({});\n    }\n\n    setSearchParams({ query: e.target.value });\n  };\n\n  return (\n    <>\n      <input type=\"text\" onChange={handleChange} value={searchQuery} />\n      <div>\n        {movies.map(item => {\n          return (\n            <li key={item.id}>\n              <Link to={`${item.id}`} state={{ from: location }}>\n                {item.title}\n              </Link>\n            </li>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default MoviesPage;"],"names":["axios","API_KEY","FetchSearchByKeyword","query","request","data","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","then","r","results","type","onChange","e","target","value","map","item","to","id","state","from","title"],"sourceRoot":""}